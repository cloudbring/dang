%% name = Dang::Parser

%% { #%%
  def initialize(str, debug=false)
    setup_parser(str, debug)
    @doctype = nil
    @output = ""
  end

  DOC_TYPES = {
    "html"                 => "<!doctype html>",
    "html5"                => "<!doctype html>",
    "html4"                => '<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">',
    "html4 transitional"   => '<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">',
    "html4 strict"         => '<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">',
    "html4 frameset"       => '<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">',

    "xhtml 1"              => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
    "xhtml 1 transitional" => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
    "xhtml 1 strict"       => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
    "xhtml 1 frameset"     => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
    "xhtml 1.1"            => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
    "xhtml 1.1 basic"      => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
    "xhtml 1.2 mobile"     => '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
    "xhtml rdfa"           => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">',
    "xhtml 5"              => '<!DOCTYPE html>',

    "xml iso-8859-1"       => "<?xml version='1.0' encoding='iso-8859-1' ?>"
  }

  def html_doctype
    return "" unless @doctype

    unless DOC_TYPES.key? @doctype
      warn "doctype '#{@doctype}' not understood, using 'html'"
      @doctype = "html"
    end

    DOC_TYPES[@doctype].dup
  end

  def output
    doctype = html_doctype
    out = @output.strip

    if doctype.empty?
      str = out
    else
      if out.empty?
        str = doctype
      else
        str = doctype << "\n" << out
      end
    end

    str
  end
}

  space = " " | "\t"
     bs = " " | "\t" | "\n"
      - = bs+
    eol = "\n"
    eof = !.
   rest = < (!eol .)* > (eol | eof) { text }

doctype = "!!!" space* rest:r { @doctype = r.empty? ? "html" : r }

   name = < /[a-zA-Z0-9_-]+/ > { text }
  start = "<" name:n { n }
    pts = space+ { "" }
        | < eol bs* > { text }

    end = name:n ">" { n }
  slash = - "/>"

 marker = start | (- end)
  chunk = < (!marker .)* > { text }

   part = comment | tag | chunk
   body = part:p body:b { "#{p}#{b}" }
        | part

    key = name
    val = < (!"]" .)* > { text }

   attr = "[" key:k "=" val:v "]" { "#{k}='#{v}'" }
        | "[" key:k "]" { k }
  attrs = attr:a attrs:l { "#{a} #{l}" }
        | attr

comment = "<!" < /[^!]*/ > "!>" { "<!--#{text}-->" }
    tag = start:l slash { "<#{l} />" }
        | start:l attrs:a slash { "<#{l} #{a} />" }
        | start:l attrs:a pts body:b pts:es end:r { "<#{l} #{a}>#{b}#{es}</#{r}>" }
        | start:l pts:s body:b pts:es end:r { "<#{l}>#{s}#{b}#{es}</#{r}>" }

  root = doctype? body:b eof { @output = b }
